# Modifying the actions? Don't like pushing to GitHub to find out whether your changes worked?
# Consider act: https://github.com/nektos/act
#
# WARNING: you'll need the 18.2GB GitHub-compatible Docker image:
#   act -P ubuntu-18.04=nektos/act-environments-ubuntu:18.04

name: Elixir CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  HONEYCOMB_KEY: ${{ secrets.HONEYCOMB_KEY }}
  ADMIN_USER: ${{ secrets.ADMIN_USER }}
  ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
  TIMBER_KEY: ${{ secrets.TIMBER_KEY }}
  TIMBER_SOURCE_ID: ${{ secrets.TIMBER_SOURCE_ID }}

jobs:
  build:
    runs-on: ubuntu-18.04
    name: Elixir ${{matrix.elixir}} on OTP ${{matrix.otp}}
    strategy:
      matrix:
        otp: ["23.0"]
        elixir: ["1.10"]
    services:
      test_db:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pears_test
      ci_db:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pears_ci
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master # Checkout out master instead of the latest commit
          fetch-depth: 0 # Checkout the whole branch
      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: ${{matrix.elixir}}
          otp-version: ${{matrix.otp}}
      - name: Restore dependencies cache
        uses: actions/cache@v2
        env:
          cache-name: deps
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-${{ env.cache-name }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-${{ env.cache-name }}-
      - name: Cache _build
        uses: actions/cache@v1.1.2
        env:
          cache-name: _build
        with:
          path: _build
          key: ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-${{ env.cache-name }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-${{ env.cache-name }}-
      - name: mix deps.get
        run: |
          mix deps.get
          mix deps.unlock --unused
          mix deps.clean --unused
          git diff --exit-code mix.lock
      - name: mix compile (dev)
        run: |
          mix deps.compile
          mix compile
      - name: mix compile (test)
        run: |
          mix deps.compile
          mix compile
        env:
          MIX_ENV: test
      - name: mix compile (ci)
        run: |
          mix deps.compile
          mix compile
        env:
          MIX_ENV: ci
      - name: mix test
        run: mix test --trace
      - name: mix format
        run: |
          mix format --check-formatted --dry-run --check-equivalent
      - name: mix credo
        run: mix credo --strict
      - name: start e2e server in the background
        run: |
          cd assets
          npm install
          node node_modules/webpack/bin/webpack.js --mode production
          cd ..
          mix do ecto.create, ecto.migrate
          mix phx.server &
        env:
          MIX_ENV: ci
      - name: cypress test
        uses: cypress-io/github-action@v2
        with:
          wait-on: 'http://localhost:5000'
          working-directory: assets
          browser: chrome
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-videos
          path: assets/cypress/videos
      - name: deploy
        uses: mhanberg/gigalixir-action@v0.3.0
        with:
          GIGALIXIR_USERNAME: ${{ secrets.GIGALIXIR_USERNAME }}
          GIGALIXIR_PASSWORD: ${{ secrets.GIGALIXIR_PASSWORD }}
          GIGALIXIR_APP: pears
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          MIGRATIONS: false
